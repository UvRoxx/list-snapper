# SnapList Environment Variables Configuration
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control!

# =============================================================================
# DATABASE
# =============================================================================
# PostgreSQL connection string
# Local: postgresql://user:password@localhost:5432/snaplist
# Neon: postgresql://user:pass@ep-xxx.neon.tech/snaplist?sslmode=require
# Digital Ocean: Automatically injected in production
DATABASE_URL=postgresql://user:password@localhost:5432/snaplist

# =============================================================================
# SECURITY SECRETS
# =============================================================================
# Generate these with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-jwt-secret-here-generate-a-random-string
SESSION_SECRET=your-session-secret-here-generate-a-random-string

# =============================================================================
# STRIPE CONFIGURATION (Required)
# =============================================================================
# Get your keys from: https://dashboard.stripe.com/apikeys
# Use test keys (sk_test_... and pk_test_...) for development
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key

# Frontend Stripe key (must match STRIPE_PUBLISHABLE_KEY)
VITE_STRIPE_PUBLIC_KEY=pk_test_your_stripe_publishable_key

# Stripe Product Price IDs
# Get these from: https://dashboard.stripe.com/products
# Create products for "Standard" and "Pro" tiers
STRIPE_STANDARD_PRICE_ID=price_1SD9ShDtmSuWvYXlHQLZbM77
STRIPE_PRO_PRICE_ID=price_1SD9T7DtmSuWvYXlQhTn40Oj

# Stripe Webhook Secret
# Get from: https://dashboard.stripe.com/webhooks
# Leave empty for development (webhook will work without signature verification)
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# =============================================================================
# GOOGLE OAUTH (Optional)
# =============================================================================
# Get credentials from: https://console.cloud.google.com/
# 1. Create a project
# 2. Enable Google+ API
# 3. Create OAuth 2.0 credentials
# 4. Add authorized redirect URI: http://localhost:5000/api/auth/google/callback
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# =============================================================================
# FACEBOOK OAUTH (Optional)
# =============================================================================
# Get credentials from: https://developers.facebook.com/
# 1. Create an app
# 2. Add Facebook Login product
# 3. Add Valid OAuth Redirect URI: http://localhost:5000/api/auth/facebook/callback
FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret

# =============================================================================
# GOOGLE MAPS (Optional)
# =============================================================================
# Get API key from: https://console.cloud.google.com/google/maps-apis/
# Enable: Maps JavaScript API, Places API, Geocoding API
VITE_GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Environment (development, production, test)
NODE_ENV=development

# Server port (default: 5000)
PORT=5000

# =============================================================================
# OPTIONAL: ADVANCED SETTINGS
# =============================================================================
# Enable debug logging
# DEBUG=*

# Log level (error, warn, info, debug)
# LOG_LEVEL=info

# Session configuration
# SESSION_MAX_AGE=86400000

# CORS origins (comma-separated)
# CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# PRODUCTION NOTES
# =============================================================================
# For production deployment:
# 1. Use production Stripe keys (sk_live_... and pk_live_...)
# 2. Generate strong JWT_SECRET and SESSION_SECRET
# 3. Use managed PostgreSQL database URL
# 4. Update OAuth redirect URIs to production domain
# 5. Update Stripe webhook endpoint to production domain
# 6. Never commit this file with actual secrets!

